name: Main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
  ARM_CLIENT_ID: "${{ secrets.CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.CLIENT_SECRET }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.TENANT_ID }}"
  TF_FOLDER: "infra-tf"

jobs:

  build:
    name: 'Build and push Docker image'
    runs-on: ubuntu-latest

    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/wordpress

  terraform:
    name: 'Terraform'
    needs: build
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: ${{ env.TF_FOLDER }}
      run: terraform init

    # On push to "main", build or change infrastructure according to Terraform configuration files    
    - name: Terraform Apply
      working-directory: ${{ env.TF_FOLDER }}
      run: terraform apply -auto-approve
